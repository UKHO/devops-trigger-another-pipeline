parameters:
  - name: appConfigUri
    type: string
    default: ''
  - name: organisation
    type: string
    default: ''
  - name: project
    type: string
    default: ''
  - name: pipelineId
    type: string
    default: ''
  - name: powerShellContainer
    type: string
    default: ''

jobs:
  - job:
    variables:
      ${{ if eq(parameters.appConfigUri, '') } }}:
        - group: TriggerAnotherPipeline
    displayName: Trigger Another Pipeline
    container: ${{ parameters.powerShellContainer }}
    steps:
      - checkout: TriggerAnotherPipeline
        persistCredentials: true
        path: devops-trigger-another-pipeline

      - ${{ if ne(parameters.appConfigUri, '') } }}:
        - task: AzureAppConfiguration@8
          inputs: # Will parameter all this
            azureSubscription: 'trigger-another-pipeline-sc'
            AppConfigurationEndpoint: 'https://triggeranotherpipeline-appconfig-uks.azconfig.io'
            KeyFilter: 'Pipeline:*'
            Label: 'IAT'
            TrimKeyPrefix: 'Pipeline:'
            SuppressWarningForOverriddenKeys: true

      - task: PowerShell@2
        name: getAccessToken
        timeoutInMinutes: 5
        displayName: "Get access token"
        inputs:
          targetType: filePath
          filePath: "$(Pipeline.Workspace)/devops-trigger-another-pipeline/pwsh/CreateLoginAccessToken.ps1"
          arguments: >
            -ClientId $(ClientId)
            -ClientSecret $(ClientSecret)
            -TenantId $(TenantId)

      - task: PowerShell@2
        name: wait
        timeoutInMinutes: 60
        displayName: "Wait until target pipeline is free"
        inputs:
          targetType: filePath
          filePath: "$(Pipeline.Workspace)/devops-trigger-another-pipeline/pwsh/waitUntilTargetPipelineIsFree.ps1"
          arguments: >
            -Organisation ${{ parameters.organisation }}
            -Project ${{ parameters.project }}
            -PipelineId ${{ parameters.pipelineId }}
            -AccessToken "Bearer $(AccessToken)"

      - task: PowerShell@2
        name: trigger
        displayName: "Trigger target pipeline and wait"
        timeoutInMinutes: 60
        inputs:
          targetType: filePath
          filePath: "$(Pipeline.Workspace)/devops-trigger-another-pipeline/pwsh/triggerPipelineRunAndWaitForResult.ps1"
          arguments: >
            -Organisation ${{ parameters.organisation }}
            -Project ${{ parameters.project }}
            -PipelineId ${{ parameters.pipelineId }}
            -AccessToken "Bearer $(AccessToken)"
  